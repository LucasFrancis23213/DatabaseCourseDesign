CREATE TABLE ITEM_REVIEW_LINKS (
    REVIWE_ID INT PRIMARY KEY,
    USER_ID INT FOREIGN KEY REFERENCES USERS(USER_ID),

);

CREATE TABLE LOST_ITEMS (
    ITEM_ID INT PRIMARY KEY,
    ITEM_NAME VARCHAR(20) NOT NULL,
    CATEGORY_ID INT REFERENCES ITEM_CATEGORIES(CATEGORY_ID),
    DESCRIPTION VARCHAR(255),
    LOST_LOCATION VARCHAR(50),
    LOST_DATE DATE,
    USER_ID INT REFERENCES USERS(USER_ID),
    LOST_STATUS VARCHAR(20),
    REVIEW_ID INT
);

CREATE TABLE FOUND_ITEMS (
    ITEM_ID INT PRIMARY KEY,
    ITEM_NAME VARCHAR(20) NOT NULL,
    CATEGORY_ID INT FOREIGN KEY REFERENCES ITEM_CATEGORIES(CATEGORY_ID),
    DESCRIPTION VARCHAR(255),
    FOUND_LOCATION VARCHAR(50),
    FOUND_DATE DATE,
    USER_ID INT FOREIGN KEY REFERENCES USERS(USER_ID),
    MATCH_STATUS VARCHAR(20),
    REVIEW_ID VARCHAR(20)
);

/*****************************************************************************************
*   这个表的 ItemID 项不能使用两个外键，所以需要使用触发器来实现类似外键的功能
*****************************************************************************************/
CREATE TABLE REWARD_OFFERS (
    REWARD_ID INT PRIMARY KEY,
    USER_ID FOREIGN KEY REFERENCES USERS(USER_ID),
    ITEM_ID FOREIGN KEY,
    REWARD_AMOUNT INT,
    STATUS VARCHAR(20),
    RELEASE_DATE DATE,
    DEADLINE DATE
);

CREATE TABLE TRANSACTION_LOGS (
    TRANSACTION_ID INT PRIMARY KEY,
    FROM_USER_ID INT REFERENCES USERS(USER_ID),
    TO_USER_ID INT REFERENCES USERS(USER_ID),
    ITEM_ID INT,
    AMOUNT DECIMAL(10, 2),
    TRANSACTION_TYPE VARCHAR(20)
);

CREATE TABLE RECOMMENDATION_LOGS (
    LOG_ID INT PRIMARY KEY,
    USER_ID INT REFERENCES USERS(USER_ID),
    RECOMMENDATION_TYPE VARCHAR(20),
    RECOMMENDATION_TIME DATE,
    USER_FEED_BACK VARCHAR(20)
);
